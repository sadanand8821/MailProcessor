import org.json.JSONObject;
import org.json.JSONArray;
import java.util.Iterator;

// Get the response from the previous sampler
String response = prev.getResponseDataAsString();

// Ensure the response is not null or empty
if (response == null || response.trim().isEmpty()) {
    log.warn("Response is empty or null. Skipping JSON parsing.");
    return;
}

// Parse the JSON
JSONObject jsonObject = new JSONObject(response);

// Function to extract and store JSON keys in JMeter variables
void extractKeys(Object obj, String prefix) {
    if (obj instanceof JSONObject) {
        JSONObject json = (JSONObject) obj;
        Iterator<String> keys = json.keys();
        
        while (keys.hasNext()) {
            String key = keys.next();
            Object value = json.get(key);
            String fullKey = prefix.isEmpty() ? key : prefix + "." + key;
            
            if (value instanceof JSONObject || value instanceof JSONArray) {
                extractKeys(value, fullKey);
            } else {
                vars.put(fullKey, value.toString()); // Store key-value in JMeter variables
            }
        }
    } else if (obj instanceof JSONArray) {
        JSONArray array = (JSONArray) obj;
        for (int i = 0; i < array.length(); i++) {
            extractKeys(array.get(i), prefix + "[" + i + "]");
        }
    }
}

// Start extracting keys
extractKeys(jsonObject, "");

// Log success message
log.info("Extracted JSON keys stored in JMeter variables.");
