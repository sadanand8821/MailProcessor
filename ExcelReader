public class ExcelReader {
    public static Map<String, List<String>> readRepoData(String excelPath) throws IOException {
    Map<String, List<String>> repoData = new HashMap<>();
    try (FileInputStream fis = new FileInputStream(excelPath);
         Workbook wb = new XSSFWorkbook(fis)) {
        Sheet sheet = wb.getSheetAt(0);
        // Assuming first row is headers, start from second row
        for (int i = 1; i <= sheet.getLastRowNum(); i++) {
            Row row = sheet.getRow(i);
            if (row == null) continue;
            Cell repoCell = row.getCell(0);
            Cell branchesCell = row.getCell(1);

            if (repoCell != null) {
                String repoUrl = repoCell.getStringCellValue().trim();
                List<String> branches = new ArrayList<>();
                if (branchesCell != null) {
                    String branchStr = branchesCell.getStringCellValue().trim();
                    if (!branchStr.isEmpty()) {
                        for (String b : branchStr.split(",")) {
                            branches.add(b.trim());
                        }
                    }
                }
                repoData.put(repoUrl, branches);
            }
        }
    }
    return repoData;
}
    
    public static Map<String, Set<String>> readDevMap(String excelPath) throws IOException {
        // Assuming:
        // Row format: UID | AuthorName1 | AuthorName2 | ...
        Map<String, Set<String>> devMap = new HashMap<>();
        
        try (FileInputStream fis = new FileInputStream(excelPath)) {
            Workbook wb = new XSSFWorkbook(fis);
            Sheet sheet = wb.getSheetAt(0);
            for (Row row : sheet) {
                Cell uidCell = row.getCell(0);
                if (uidCell == null) continue;
                String uid = uidCell.getStringCellValue().trim();
                Set<String> aliases = new HashSet<>();
                for (int i = 1; i < row.getLastCellNum(); i++) {
                    Cell aliasCell = row.getCell(i);
                    if (aliasCell != null) {
                        aliases.add(aliasCell.getStringCellValue().trim());
                    }
                }
                devMap.put(uid, aliases);
            }
        }
        return devMap;
    }
}
